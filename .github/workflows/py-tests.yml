#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: py-tests
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '0.[0-9]+.[0-9]+'
    paths-ignore:
      - 'openmetadata-docs/**'
      - 'openmetadata-docs-v1/**'
  pull_request_target:
    types: [labeled, opened, synchronize, reopened]
    paths:
      - "ingestion/**"
      - "openmetadata-service/**"
      - "openmetadata-spec/src/main/resources/json/schema/**"
      - "pom.xml"
      - "Makefile"

permissions:
  contents: read

jobs:
  # Needed since env is not available on the job context: https://github.com/actions/runner/issues/2372
  check-debug:
    runs-on: ubuntu-latest
    outputs:
      DEBUG: ${{ env.DEBUG }}
    steps:
      - run: echo "null"
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      session: ${{ steps.set-matrix.outputs.session }}
    steps:
      - uses: actions/checkout@v3
      - uses: wntrblm/nox@main
      - id: set-matrix
        shell: bash
        run: echo session=$(nox -f ingestion/noxfile.py --json -l -k 'not e2e' | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT
  py-run-tests:
    name: Session ${{ matrix.session }}
    needs: 
      - generate-jobs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.generate-jobs.outputs.session) }}
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        swap-storage: true
        docker-images: false

    - name: Wait for the labeler
      uses: lewagon/wait-on-check-action@v1.3.3
      if: ${{ github.event_name == 'pull_request_target' }}
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        check-name: Team Label
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 90

    - name: Verify PR labels
      uses: jesusvasquez333/verify-pr-label-action@v1.4.0
      if: ${{ github.event_name == 'pull_request_target' }}
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
        valid-labels: 'safe to test'
        pull-request-number: '${{ github.event.pull_request.number }}'
        disable-reviews: true  # To not auto approve changes

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Extract Python Version from Session
      id: extract-python-version
      run: |
        session_name="${{ matrix.session }}"
        python_version=$(echo "$session_name" | grep -oE '[0-9]+\.[0-9]+')
        echo "py-version=$python_version" >> $GITHUB_ENV
        
    - name: Setup Openmetadata Test Environment
      uses: ./.github/actions/setup-openmetadata-test-environment
      with:
        python-version: ${{ env.py-version }}
        args: "-m no-ui"
        ingestion_dependency: "mysql,elasticsearch,sample-data"

    - name: Run Python Tests & record coverage
      run: |
        source env/bin/activate
        make NOX_FLAGS='-s "${{ matrix.session }}"' run_python_tests
      env:
        TESTCONTAINERS_RYUK_DISABLED: true

    - name: Upload tests artifact
      if: steps.e2e-test.outcome == 'success' || steps.python-e2e-test.outcome == 'success' && env.DEBUG == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: tests-${{ matrix.e2e-test }}
        path: ingestion/junit/**/test-results-*.xml

    - name: Upload coverage artifact for Python tests
      if: matrix.e2e-test == 'python' && steps.python-e2e-test.outcome == 'success' && env.DEBUG == 'false'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.e2e-test }}
        path: ingestion/converage/**/.coverage.*
    
    - name: Clean Up
      run: |
        cd ./docker/development
        docker compose down --remove-orphans
        sudo rm -rf ${PWD}/docker-volume

      # we have to pass these args values since we are working with the 'pull_request_target' trigger
  sonar-cloud-coverage-upload:
    runs-on: ubuntu-latest
    needs:
      - py-run-tests
      - check-debug
    if: needs.check-debug.outputs.DEBUG == 'false'
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y unixodbc-dev python3-venv librdkafka-dev gcc libsasl2-dev build-essential libssl-dev libffi-dev \
          unixodbc-dev libevent-dev python3-dev libkrb5-dev

      - name: Install coverage dependencies
        run: |
          python3 -m venv env
          source env/bin/activate
          make install_all install_test

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate report
        run: |
          for folder in artifacts/coverage/3.9/coverage-*; do
            cp -rT $folder/ . ;
          done
          mkdir ingestion/junit
          for folder in artifacts/junit/3.9/tests-*; do
            cp -rT $folder/ ingestion/junit ;
          done
          source env/bin/activate
          coverage combine --rcfile=ingestion/pyproject.toml --keep -a ingestion/coverage/3.9/
          coverage xml --rcfile=ingestion/pyproject.toml --data-file=.coverage -o ingestion/coverage.xml
          sed -e "s/$(python -c "import site; import os; from pathlib import Path; print(os.path.relpath(site.getsitepackages()[0], str(Path.cwd())).replace('/','\/'))")/src/g" ingestion/coverage.xml >> ingestion/ci-coverage.xml
          sed -i 's/src\/metadata/\/github\/workspace\/ingestion\/src\/metadata/g' ingestion/ci-coverage.xml
        shell: bash

      - name: Push Results to Sonar
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.INGESTION_SONAR_SECRET }}
        with:
          projectBaseDir: ingestion/
  